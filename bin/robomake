#! /usr/bin/ruby

require 'rubygems'
require 'growl'

include Growl

extensions = ["mk", "cpp", "h"]

if ARGV.size < 1
  puts "Usage: robomake.rb <app>"
  exit 1
end

def build(command)
  green_robot = File.dirname(__FILE__) + '/green_robot.png'
  red_robot = File.dirname(__FILE__) + '/red_robot.png'

  if system(command)
    notify 'NDK build succeeded', :title => 'robomake', :icon => green_robot
  else
    notify 'NDK build failed', :title => 'robomake', :icon => red_robot
  end
  print_separator
end

def print_separator
  puts "============================================="
end

interrupted = false
trap("INT") { interrupted = true }

app = ARGV.shift
application_mk = "apps/#{app}/Application.mk"
command = "make APP=#{app}"

unless File.exists?(application_mk) 
  puts "#{application_mk} does not exist"
  exit 1
end

jni_path = ""
File.open(application_mk) do |file|
  while (line = file.gets)
    split = line.split(':=')
    if "#{split[0].rstrip}" == "APP_PROJECT_PATH"
      jni_path = split[1].strip << "/jni/**"
      break
    end
  end
  file.close
end

files = {}
extensions.each { |ext|
  Dir[jni_path + "/*.#{ext}"].each { |file|
    files[file] = File.mtime(file)
  }
}

build(command)
loop do
  sleep 1

  if interrupted
    exit
  end
  
  changed_file, last_changed = files.find { |file, last_changed|
    File.mtime(file) > last_changed
  }

  if changed_file
    files[changed_file] = File.mtime(changed_file)
    puts "=> #{changed_file} changed, running #{command}"
    build(command)
  end
end
